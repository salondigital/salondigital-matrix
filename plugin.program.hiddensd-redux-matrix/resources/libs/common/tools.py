import base64, codecs
magic = ''
love = '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'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))